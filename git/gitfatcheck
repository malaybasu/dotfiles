#!/usr/bin/env bash

# Check for big files in the repository. 
# The script will also check the .gitatributes file for the extension

for i in "$@"; do
    case $i in
        -v|--verbose)
            VERBOSE=true
            ;;
        -a|--add)
            ADD=true
            ;;
        -h|--help)
            echo "Usage: gitfatcheck [options]"
            echo "Options:"
            echo "  -v, --verbose  Print verbose output"
            echo "  -a, --add      Add filter to .gitattributes"
            echo "  -h, --help     Print this help message"
            exit 0
            ;;
    esac
done

gitroot=$(git rev-parse --show-toplevel)

if [[ -z $gitroot ]]; then
    echo "Not a git repository"
    exit 1
else
    if [[ $VERBOSE ]]; then
        echo "Git repository found at $gitroot"
    fi
  
fi

if [[ $VERBOSE ]]; then
echo "Checking for large files in the repository..."
fi


#for file in `git ls-files`; do
for file in `find . -type f | grep -v '/.git/'`; do    
    if [ -f $file ]; then
        size=$(stat -c '%s' $file)
        # Convert to megabytes
        size=$(($size / 1024 / 1024))
        
        relative_path=$(realpath --relative-to=`pwd` $file)

        if [[ $size -gt 50 ]]; then
            if [[ $VERBOSE ]]; then
                echo "$relative_path (${size}M)"
                echo -n "Checking for .gitattributes... "
            fi

            v=$(git check-attr filter -- $file | grep -w "fat$")

            if [[ -z $v ]]; then
                echo "DANGER: $relative_path (${size}M) -- not filtered in .gitattributes"
                if [[ $ADD ]]; then
                    echo "Adding filter to .gitattributes"
                    file_extension=${relative_path##*.}
                    if [[ -z file_extension ]]; then
                        die "Could not determine file extension"
                    fi
                    echo "# Auto added by gitfatcheck" >> $gitroot/.gitattributes
                    echo "*.$file_extension filter=fat -crlf" >> $gitroot/.gitattributes
                fi
            else
                if [[ $VERBOSE ]]; then
                    echo "OK: Filter found"
                fi
            fi

        fi
    fi 
    
done